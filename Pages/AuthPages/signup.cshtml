@page
@model EmployeeHub.Pages.AuthPages.SignupModel
@{
    ViewData["Title"] = "Sign Up";
}

<div class="signup-container">
    <h2>Create an Account</h2>
    <form method="post" id="signupForm">
        <div class="form-group">
            <label for="firstName">First Name</label>
            <input type="text" id="firstName" name="FirstName" class="form-control" placeholder="Enter your first name" required />
        </div>
        <div class="form-group">
            <label for="lastName">Last Name</label>
            <input type="text" id="lastName" name="LastName" class="form-control" placeholder="Enter your last name" required />
        </div>
        <div class="form-group">
            <label for="email">Email</label>
            <input type="email" id="email" name="Email" class="form-control" placeholder="Enter your email" required />
        </div>
        <div class="form-group">
            <label for="password">Password</label>
            <input type="password" id="password" name="PasswordHash" class="form-control" placeholder="Enter your password" required />
        </div>
        <div class="form-group">
            <label for="department">Department</label>
            <select id="department" name="DepartmentId" class="form-control" required>
                <option value="" disabled selected>Select your department</option>
                <!-- Options will be dynamically populated -->
            </select>
        </div>
        
        <button type="submit" class="btn btn-primary">Sign Up</button>
    </form>
    <div id="errorMessage" class="text-danger mt-2" style="display: none;"></div>
    <div id="successMessage" class="text-success mt-2" style="display: none;"></div>

    <div class="login-option mt-3">
        <p>Already have an account? <a href="/AuthPages/Login" class="text-primary">Log In</a></p>
    </div>
</div>

@section Scripts {
    <script>
        // Fetch departments and populate the dropdown
        async function fetchDepartments() {
            try {
                const response = await fetch('/api/department/all');
                if (response.ok) {
                    const result = await response.json();
                    const departments = result.data;

                    const departmentDropdown = document.getElementById('department');
                    departments.forEach(department => {
                        const option = document.createElement('option');
                        option.value = department.id;
                        option.textContent = department.name;
                        departmentDropdown.appendChild(option);
                    });
                } else {
                    console.error("Failed to fetch departments.");
                }
            } catch (error) {
                console.error("Error fetching departments:", error);
            }
        }

        // Call fetchDepartments on page load
        document.addEventListener('DOMContentLoaded', fetchDepartments);

        // Handle form submission
        document.getElementById('signupForm').addEventListener('submit', async function (event) {
            event.preventDefault();

            const firstName = document.getElementById('firstName').value.trim();
            const lastName = document.getElementById('lastName').value.trim();
            const email = document.getElementById('email').value.trim();
            const password = document.getElementById('password').value.trim();
            const departmentId = document.getElementById('department').value;

            const payload = {
                FirstName: firstName,
                LastName: lastName,
                Email: email,
                PasswordHash: password,
                DepartmentId: departmentId,
            };

            console.log("Payload being sent:", payload);

            try {
                const response = await fetch('/api/auth/register', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(payload)
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Sign-up successful:", result);

                    // Show success message
                    document.getElementById('successMessage').innerText = "Account created successfully! Please log in.";
                    document.getElementById('successMessage').style.display = "block";

                    // Clear the form
                    document.getElementById('signupForm').reset();

                    // Redirect to login page after a delay
                    setTimeout(() => {
                        window.location.href = "/AuthPages/Login";
                    }, 3000);
                } else {
                    const error = await response.json();
                    document.getElementById('errorMessage').innerText = error.message || "Sign-up failed. Please try again.";
                    document.getElementById('errorMessage').style.display = "block";
                }
            } catch (error) {
                console.error("Error during sign-up:", error);
                document.getElementById('errorMessage').innerText = "An error occurred. Please try again.";
                document.getElementById('errorMessage').style.display = "block";
            }
        });
    </script>
}