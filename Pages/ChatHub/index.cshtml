@page
@using EmployeeHub.Models.Dtos
@model EmployeeHub.Pages.ChatHub.IndexModel
@{
    ViewData["Title"] = "Chat";
}

<div class="chat-container">
    <!-- Sidebar -->
    <div class="chat-sidebar">
        <div class="sidebar-header">
            <h3>Chats</h3>
            <button class="btn btn-sm btn-primary" id="newChatBtn">
                <i class="fas fa-plus"></i> New
            </button>
        </div>

        <div class="search-box">
            <input type="text" placeholder="Search conversations..." class="form-control">
        </div>

        <div class="conversation-list" id="conversationList">
            @if (Model.ChatList != null && Model.ChatList.Any())
            {
                foreach (var chat in Model.ChatList)
                {
                    var Messages = chat.MessagesJson;
                    var lastMessage = Messages?.LastOrDefault();

                    <div class="conversation-item" data-chat-id="@chat.Id" onclick="loadChatHistory('@chat.Id')">
                        <div class="conversation-avatar">
                            <img src="~/images/default-avatar.png" alt="     " />
                        </div>
                        <div class="conversation-details">
                            <h5>@(chat.User2Id)</h5>
                            <p>@(lastMessage?.Message ?? "No messages available")</p>
                        </div>
                    </div>
                }
            }
            else
            {
                <p class="text-muted">No conversations found.</p>
            }
        </div>
    </div>

    <!-- Main Chat Area -->
    <div class="chat-main">
        <div class="chat-header">
            <div id="currentChatInfo">
                <input type="hidden" id="currentChatId" value="" />
                <h4>Select a conversation</h4>
            </div>
        </div>

        <div class="chat-messages" id="messageContainer">
            <!-- Chat history will be dynamically loaded here -->
        </div>

        <div class="chat-input" id="chatInput" style="display: none;">
            <div class="input-group">
                <input type="text" id="messageInput" class="form-control" placeholder="Type your message...">
                <div class="input-group-append">
                    <button class="btn btn-primary" id="sendButton" onclick="sendMessage()">
                        <i class="fas fa-paper-plane"></i>
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        async function sendMessage() {
            const messageInput = document.getElementById('messageInput');
            const message = messageInput.value.trim();
            const currentChatId = document.getElementById('currentChatId').value; // Retrieve the chat ID

            if (!message || !currentChatId) {
                console.error("Message or chat ID is missing.");
                return;
            }

            const payload = {
                ReceiverUserId: Guid.parse("491A1237-78A0-44E1-B31F-250718611219"), 
                Message: message
            };

            try {
                const response = await fetch('/api/chat/send-message', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(payload)
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Message sent successfully:", result);

                    // Clear the input field
                    messageInput.value = '';

                    // Reload the chat history to include the new message
                    loadChatHistory(currentChatId);
                } else {
                    console.error("Failed to send message.");
                }
            } catch (error) {
                console.error("Error sending message:", error);
            }
        }

        async function loadChatHistory(chatId) {
            currentChatId = chatId; // Set the current chat ID
            document.getElementById('currentChatId').value = chatId; // Store it in the hidden input field

            try {
                const response = await fetch(`/ChatHub/index?handler=ChatHistory&chatId=${chatId}`);
                if (response.ok) {
                    const chatHistoryHtml = await response.text();
                    document.getElementById('messageContainer').innerHTML = chatHistoryHtml;
                    document.getElementById('chatInput').style.display = 'block';
                } else {
                    console.error("Failed to load chat history.");
                }
            } catch (error) {
                console.error("Error loading chat history:", error);
            }
        }
    </script>
}